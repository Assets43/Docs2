

<sample Basic Image>
	class Main extends App
	{
		onStart()
		{
			// Creates a fullscreen layout with objects vertically centered.
			this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

			var image = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Hapus_Mango.jpg/220px-Hapus_Mango.jpg"

			this.img = ui.addImage( this.main, image, "", 0.7 )
		}
	}
</sample>

<sample Avatar>
	class Main extends App
	{
		onStart()
		{
			// Creates a fullscreen layout with objects vertically centered.
			this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

			// source for the image file
			var image = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Hapus_Mango.jpg/220px-Hapus_Mango.jpg"

			// Adds an image component to the layout.
			this.img = ui.addImage( this.main, image, "Avatar" )
		}
	}
</sample>

<sample Button>
	class Main extends App
	{
		onStart()
		{
			// Creates a fullscreen layout with objects vertically centered.
			this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

			// source for the image file
			var image = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Hapus_Mango.jpg/220px-Hapus_Mango.jpg"

			// Adds an image component to the layout.
			this.img = ui.addImage( this.main, image, "Button", 0.5 )
		}
	}
</sample>

<sample Drawings>
	class Main extends App
    {
        onStart()
        {
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            this.img = ui.addImage( this.main, "", "canvas", 1, 1 )
            this.img.lineCap = "round"
            this.img.lineJoin = "round"

            this.img.drawLine( 130, 40, 300, 500, "#009688", 10)
            this.img.drawSquare( 320, 200, 200, "#683ab7")
            this.img.drawCircle(400, 300, 250, "", "", 20)
            this.img.drawArc(800, 200, 100, 40, 270, "#44009688", "#009688", 10)
            var points = [
                [0,0],
                [400,40],
                [20, 40],
                [300, 340],
                [140, 500]
            ]
            this.img.lineCap = "square"
            this.img.lineJoin = "miter"
            this.img.drawPolyline( points, "blue", 5 )
        }
    }
</sample>

<sample Analog Clock>
	class Main extends App
	{
		onStart()
		{
			this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

			ui.addAppBar( this.main, "Analog Clock" )

			this.img = ui.addImage( this.main, "", "canvas", "300px", "300px" )
			this.img.lineCap = "round"
			this.img.lineWidth = 4
			this.img.strokeColor = "#009688"
			this.img.lineJoin = "round"

			this.time = ui.addText(this.main, "00:00:00", "h6,bold")
			this.time.setMargins(0, 0.05, 0, 0)

			setInterval( this.draw.bind(this), 1000)
		}

		draw()
		{
			this.img.clear()

			let x, y, n

			for( n=1; n<=12; n++ ) {
				x = 130 * Math.cos( n * (Math.PI/6) )
				y = 130 * Math.sin( n * (Math.PI/6) )

				x += 150
				y += 150

				this.img.drawCircle(x, y, 4, "#311b92")
			}

			var date = new Date()

			var hour = date.getHours() % 12
			var minutes = date.getMinutes()
			var seconds = date.getSeconds()

			var hourAngle = hour * ( Math.PI / 6) - ( Math.PI/2 )
			var minAngle = minutes * ( Math.PI / 30 ) - ( Math.PI/2 )
			var secAngle = seconds * ( Math.PI / 30 ) - ( Math.PI/2 )

			this.drawHand(hourAngle, 80, 7, "#311b92")
			this.drawHand(minAngle, 100, 4, "#1e88e5")
			this.drawHand(secAngle, 110, 2, "#d81b60")

			this.img.drawCircle(150, 150, 8, "#000")

			this.time.text = hour+":"+minutes+":"+seconds
		}

		drawHand( angle, length, width, color )
		{
			var x, y

			x = length * Math.cos( angle )
			y = length * Math.sin( angle )

			x += 150
			y += 150

			this.img.drawLine(150, 150, x, y, color, width )
		}
	}
</sample>

<sample Scratch Pad>
	var color = "#000000"
    class Main extends App
    {
        onStart()
        {
            this.color = "#000000"
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            var lay = ui.addLayout( this.main, "Linear", "Horizontal,Center,VCenter", 1, 0.2)
            lay.setChildMargins(0.01, 0, 0.01, 0)

            var colors = ["#009688", "#673ab7", "#e53935", "#1e88e5"]

            ui.addText( lay, "Color", "H5")
            for( var i=0; i<colors.length; i++ ) {
                var btn = ui.addLayout( lay, "Linear", "", "48px", "48px" )
                btn.backColor = colors[i]
                btn.setCornerRadius(8,8,8,8)
                btn.data.color = colors[i]
                btn.setOnTouch( function() {
                    color = this.data.color
                })
            }

            ui.addText( lay, "Thickness", "H5")
            this.sld = ui.addSlider( lay, 5, "", 0.4)
            this.sld.setRange(5, 25)

            this.img = ui.addImage( this.main, "", "canvas", 0.8, 0.8 )
            this.img.fill = "#e0e0e0"
            
            document.onmousemove = this.draw.bind(this)
            document.onmousedown = this.mouseDown.bind(this)
            document.onmouseup = this.mouseUp.bind(this)

            ui.showPopup("Hover your mouse on the screen to draw")
        }

        mouseDown() {
            this.drawState = true
        }

        mouseUp() {
            this.drawState = false
        }

        draw( e )
        {
            if( !this.drawState ) return
            var x = e.clientX-this.img.absLeft
            var y = e.clientY-this.img.absTop
            this.img.drawCircle( x, y, this.sld.value, color, "", 0 )
        }
    }
</sample>