

<sample Basic>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "", 0.6 )
            this.sel.label = "Select an item"
        }
    }
</sample>

<sample Group Title>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ ":Choices", "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "", 0.6 )
            this.sel.label = "Select an item"
        }
    }
</sample>

<sample Multiple>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Multiple", 0.6 )
            this.sel.label = "Select an item"
        }
    }
</sample>

<sample Outlined & Small>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Outlined,Small", 0.6 )
            this.sel.label = "Select an item"
        }
    }
</sample>

<sample Radio>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Outlined,Radio", 0.6 )
            this.sel.label = "Select an item"
        }
    }
</sample>

<sample Outlined, Small With Callback>
    class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ "Item 1", "Item 2", "Item 3" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Outlined", 0.6 )
            this.sel.label = "Select an item"
            this.sel.setOnChange( this.onChange )
        }

        onChange( value )
        {
            ui.showPopup( value )
        }
    }
</sample>

<sample Grouped List Items>
	class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ ":Group 1", "Item 1", "Item 2", ":Group 2", "Another item 1", "Another item 2" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Outlined", 0.6 )
            this.sel.label = "Select an item"
            this.sel.setOnChange( this.onChange )
        }

        onChange( value )
        {
            ui.showPopup( value )
        }
    }
</sample>

<sample Grouped Radio List Items>
	class Main extends App
    {
        onStart()
        {
            // Creates a fullscreen layout with objects vertically centered.
            this.main = ui.addLayout( "main", "Linear", "VCenter", 1, 1 )

            // List items
            var items = [ ":Group 1", "Item 1", "Item 2", ":Group 2", "Another item 1", "Another item 2" ]

            // Adds a select component
            this.sel = ui.addSelect( this.main, items, "Outlined,Radio,Multiple", 0.6 )
            this.sel.label = "Select an item"
            this.sel.setOnChange( this.onChange )
        }

        onChange( value )
        {
            ui.showPopup( value )
        }
    }
</sample>