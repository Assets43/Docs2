<sample Main layout>
from native import ui, app

def onStart(self):
    # Create a fullscreen linear layout with objects vertically centered.
    self.main = ui.addLayout("main", "Linear", "VCenter", 1, 1)

    # Add a callback hanlder when the layout is touched
    self.main.setOnTouch(self.onTouch)

    # Add a button control to the main layout
    self.btn = ui.addButton(self.main, "Button", "primary")

    # Add a callback handler when the button is touched
    self.btn.setOnTouch(self.btnTouch)

def onTouch(self):
    ui.showPopup("You click the layout!")

def btnTouch(self):
    if self.main.backColor == "yellow":
        self.main.backColor = "white"
    else:
        self.main.backColor = "yellow"

app.Run(Main)
</sample>

<sample Bottom aligned with margins>
from native import ui, app

def onStart(self):
    # Creates a fullscreen main layout with objects aligned at the bottom
    self.main = ui.addLayout("main", "Linear", "Bottom,FillXY")

    # Set margins for children controls
    self.main.setChildMargins(0, 0.05, 0, 0.05)

    # Add buttons to the main layout
    self.btn1 = ui.addButton(self.main, "Button 1", "Primary")
    self.btn2 = ui.addButton(self.main, "Button 2", "Secondary")
    self.btn3 = ui.addButton(self.main, "Button 3", "Primary,Outlined")

app.Run(Main)
</sample>

<sample Orientation and spacing>
from native import ui, app

def onStart(self):
    # Create a fullscreen main layout with objects centered horizontally
    self.main = ui.addLayout("main", "Linear", "VCenter,Horizontal", 1, 1)

    # Set the children spacing
    self.main.childSpacing = "even"

    # Add buttons to the main layout.
    self.btn1 = ui.addButton(self.main, "Button 1", "Primary")
    self.btn2 = ui.addButton(self.main, "Button 2", "Secondary")
    self.btn3 = ui.addButton(self.main, "Button 3", "Primary,Outlined")

app.Run(Main)
</sample>

<sample Slide Layout>
from native import ui, app

def onStart(self):
    # Create a fullscreen slide layout with objects vertically centered
    # You can pass `Vertical` option to make a vertical slide
    self.main = ui.addLayout("main", "Slide", "VCenter,FillXY")

    # Adds an onSlide event handler to the layout
    self.main.setOnSlide(self.onSlide)

    # Adds a yellow-colored Linear first layout to the slide
    lay1 = ui.addLayout(self.main, "Linear", "VCenter", 0.8, 0.5)
    lay1.backColor = "yellow"
    ui.addText(lay1, "First Page")

    # Adds a green-colored Linear second layout to the slide
    lay2 = ui.addLayout(self.main, "Linear", "VCenter", 0.8, 0.5)
    lay2.backColor = "green"
    ui.addText(lay2, "Second Page")

    # Adds a red-colored Linear third layout to the slide
    lay3 = ui.addLayout(self.main, "Linear", "VCenter", 0.8, 0.5)
    lay3.backColor = "red"
    ui.addText(lay3, "Third Page")

    # Adds a blue-colored Linear fourth layout to the slide
    lay4 = ui.addLayout(self.main, "Linear", "VCenter", 0.8, 0.5)
    lay4.backColor = "blue"
    ui.addText(lay4, "Fourth Page")

    ui.showPopup("Swipe horizontally", "Long");

def onSlide(self, ctrl, index):
    ui.showPopup(index, "", 350)

app.Run(Main)
</sample>