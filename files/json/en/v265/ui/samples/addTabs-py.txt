<sample Basic>
from native import app
import ui

class Main(app.App):
    
    def onStart(self):
        # Creates a layout with objects vertically centered
        self.main = ui.addLayout( "main", "Linear", "FillXY,VCenter")
        self.main.backColor = "#e0e0e0"

        # Add text control to the main layout
        text = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores voluptatibus deleniti, eum nulla rerum dignissimos nihil, quidem facere repellendus necessitatibus incidunt non quasi doloremque delectus repellat pariatur dolorum. Omnis, vero."
        ui.addText(self.main, text, "Justify", 0.8)

        # Add divider control to the main layout
        self.div = ui.addDivider(self.main, 0.8)

        # Add more text control to the main layout
        ui.addText(self.main, text, "Justify", 0.8)
        
        # Add an inset divider to the main layout
        self.div = ui.addDivider(self.main, 0.8, "inset")

        ui.addText(self.main, text, "Justify", 0.8) 
</sample>

<sample With Icon>
from native import app
import ui

class Main(app.App):
    
    def onStart(self):
        # Creates a layout with objects vertically centered
        self.main = ui.addLayout( "main", "Linear", "FillXY,VCenter")
        self.main.backColor = "#e0e0e0"

        # Initialize tabs array with leading icons
        tabs = [
            ["favorite", "Favorites"],
            ["bluetooth", "Bluetooth"],
            ["wifi", "Connection"]
        ]

        # Adds a tab component to the main layout and passing the `icon` option
        self.tabs = ui.addTabs(self.main, tabs, "Icon", 0.8, 0.8)

        # Handle tab changes
        self.tabs.setOnChange( self.onChange )

        # get the first tab and add a button control
        self.tab1 = self.tabs.getLayout(0)
        self.tab1.options = "VCenter"
        self.btn = ui.addButton(self.tab1, "Button", "Secondary", 0.5)

        # get the second tab and add a text control.
        self.tab2 = self.tabs.getLayout(1)
        self.tab2.options = "VCenter"
        self.txt = ui.addText(self.tab2, "Lorem ipsum dolor set amit", "Center", 1)

        # get the third tab and add a checkbox control
        self.tab3 = self.tabs.getLayout(2)
        self.tab3.options = "VCenter"
        self.ckb = ui.addCheckbox(self.tab3, "Check me", "Secondary")
    
    def onChange(self, tab, index):
        ui.showPopup( tab + " : Index " + str(index))
</sample>

<sample Swipeable tabs>
from native import app
import ui

class Main(app.App):
    
    def onStart(self):
        # Creates a layout with objects vertically centered
        self.main = ui.addLayout( "main", "Linear", "FillXY,VCenter")
        self.main.backColor = "#e0e0e0"

        # Initialize tabs names array
        tabs = ["Tab 1", "Tab 2", "Tab 3"]

        # Adds a tab component to the main layout and passing the `swipeable` option
        # to enable swiping gesture
        self.tabs = ui.addTabs( self.main, tabs, "Swipeable", 0.8, 0.8)

        # Handle tab changes
        self.tabs.setOnChange( self.onChange )

        # get the first tab and add a text control
        self.tab1 = self.tabs.getLayout(0)
        self.tab1.options = "VCenter"
        self.tab1.backColor = "yellow"
        self.txt = ui.addText(self.tab1, "<--- Swipe to the left", "Center", 1)
        
        # get the second tab and add a button control.
        self.tab2 = self.tabs.getLayout(1)
        self.tab2.backColor = "green"

        # get the third tab and add a checkbox control
        self.tab3 = self.tabs.getLayout(2)
        self.tab3.backColor = "blue"

    def onChange(self, tab, index):
        ui.showPopup( tab + " : Index " + str(index))
</sample>

<sample Open tabs dynamically>
from native import app
import ui

class Main(app.App):
    
    def onStart(self):
        # Set the primary and secondary theme colors
        ui.setThemeColor("#673ab7", "#ffc107")

        # Creates a layout with objects vertically centered
        self.main = ui.addLayout("main", "Linear", "FillXY,VCenter")
        self.main.backColor = "#e0e0e0"

        # Initialize tabs names array with leading icons
        tabs = [
            ["favorite", "Favorites"],
            ["bluetooth", "Bluetooth"],
            ["wifi", "Connection"]
        ]

        # Adds a tab component to the main layout
        self.tabs = ui.addTabs(self.main, tabs, "Icon,Center,Primary", 0.8, 0.8)

        # Handle tab changes
        self.tabs.setOnChange( self.onChange )

        # get the first tab and add a button control
        # to open the second tab by its index
        self.tab1 = self.tabs.getLayout(0)
        self.tab1.options = "VCenter"
        self.btn1 = ui.addButton(self.tab1, "Open next")
        self.btn1.setOnTouch(lambda: self.tabs.showTabByIndex(1))

        # get the second tab and add a button control
        # to open the last tab by its index
        self.tab2 = self.tabs.getLayout(1)
        self.tab2.options = "VCenter"
        self.btn2 = ui.addButton(self.tab2, "Open next", "Primary")
        self.btn2.setOnTouch(lambda: self.tabs.showTabByIndex(2))

        # get the third tab and add a button control 
        # to open the first tab by its tab name
        self.tab3 = self.tabs.getLayout(2)
        self.tab3.options = "VCenter"
        self.btn3 = ui.addButton(self.tab3, "Open previous", "Secondary")
        self.btn3.setOnTouch(lambda: self.tabs.showTab("Favorites"))

    def onChange(self, tab, index):
        ui.showPopup( tab + " : Index " + str(index))
</sample>

<sample Icon only>
from native import app
import ui