<sample Basic stepper>
class Main extends App
    onStart()
        #  Creates a fullscreen layout with object vertically centered
        this.main = ui.addLayout("main", "Linear", "VCenter,FillXY")
        this.main.setChildMargins(0, 0, 0, 0.02)

        #  Initialize the steps array
        steps = ["Step 1", "Step 2", "Step 3"]
        
        #  Add a stepper component to the main layout
        this.stp = ui.addStepper(this.main, steps, "", 0.6)

        #  Add back button control to the main layout
        this.btnBack = ui.addButton(this.main, "Back", "Raised,Primary")
        this.btnBack.setOnTouch( this.back )

        #  Add next button control to the main layout
        this.btnNext = ui.addButton(this.main, "Next", "Raised,Primary")
        this.btnNext.setOnTouch( this.next )

    next()
        this.stp.nextStep()

    back()
        this.stp.previousStep()

</sample>

<sample Vertical stepper>
class Main extends App
    onStart()
        #  Creates a fulscreen layout with objects vertically centered
        this.main = ui.addLayout("main", "Linear", "VCenter,FillXY")

        #  Stepper titles
        steps = ["Step 1", "Step 2", "Step 3"]

        #  Add a stepper control into the main layout
        this.stp = ui.addStepper(this.main, steps, "Vertical", 0.5, 0.6)
        
        #  Get the layout of the first step
        step1Lay = this.stp.getLayout( 0 )
        step1Lay.setChildMargins(0, 0.005, 0, 0.005)

            #  Add controls to the first step layout
            ui.addText(step1Lay, "This is a text content on step 1")
            btnStep1Next = ui.addButton(step1Lay, "Next", "Raised,Primary")
            btnStep1Next.setOnTouch( this.next )

        #  Get the layout of the second step
        step2Lay = this.stp.getLayout( 1 )
        step2Lay.setChildMargins(0, 0.005, 0, 0.005)

            #  Add controls to the second step layout
            ui.addText(step2Lay, "This is a text content on step 2")
            btnStep2Next = ui.addButton(step2Lay, "Next", "Raised,Primary")
            btnStep2Next.setOnTouch( this.next )

        #  Get the layout of the third step
        step3Lay = this.stp.getLayout( 2 )
        step3Lay.setChildMargins(0, 0.005, 0, 0.005)

            #  Add controls to the third step layout
            ui.addText(step3Lay, "This is a text content on step 3")
            btnStep3Next = ui.addButton(step3Lay, "Next", "Raised,Primary")
            btnStep3Next.setOnTouch( this.next )

    next()
        this.stp.nextStep()

    back()
        this.stp.previousStep()

</sample>

<sample Mobile Stepper>
class Main extends App
    onStart()
        #  Creates a layout with objects verticaly centered
        this.main = ui.addLayout("main", "Linear", "VCenter,FillXY")

        steps = ["Step 1", "Step 2", "Step 3"]

        img1 = "https:# images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60"
        img2 = "https:# images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60"
        img3 = "https:# images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80"

        #  Add stepper control with `mobile` option
        this.stp = ui.addStepper(this.main, steps, "mobile", 0.6, 0.7)

        #  get the first layout on the stepper
        this.lay1 = this.stp.getLayout( 0 )

            #  add an image control to the first layout
            ui.addImage(this.lay1, img1, "", 1, 1)
        
        #  get the second layout on the stepper
        this.lay2 = this.stp.getLayout( 1 )

            #  add an image control to the second layout
            ui.addImage(this.lay2, img2, "", 1, 1)
        
        #  get the third layout on the stepper
        this.lay3 = this.stp.getLayout( 2 )

            #  add an image control to the third layout
            ui.addImage(this.lay3, img3, "", 1, 1)

        #  Add a callback handler when stepper layout changes
        this.stp.setOnChange( this.onChange )

    onChange( index )
        ui.showPopup( "Layout index " + index )

</sample>

<sample Autoswipe and Fraction Mobile Stepper>
class Main extends App
    onStart()
        ui.setTheme("dark")

        #  Creates a layout with objects verticaly centered
        this.main = ui.addLayout("main", "Linear", "VCenter,FillXY")

        steps = ["Step 1", "Step 2", "Step 3"]

        img1 = "https:# images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60"
        img2 = "https:# images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60"
        img3 = "https:# images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80"

        #  Add stepper control with `mobile` option
        this.stp = ui.addStepper(this.main, steps, "mobile,autoswipe,fraction", 0.6)

        #  Get the first layout on the stepper
        this.lay1 = this.stp.getLayout( 0 )

            #  Add an image control to the first layout
            ui.addImage(this.lay1, img1, "", 1)
        
        #  Get the second layout on the stepper
        this.lay2 = this.stp.getLayout( 1 )

            #  Add an image control to the second layout
            ui.addImage(this.lay2, img2, "", 1)
        
        #  Get the third layout on the stepper
        this.lay3 = this.stp.getLayout( 2 )

            #  Add an image control to the third layout
            ui.addImage(this.lay3, img3, "", 1)

        #  Add a callback handler when stepper layout changes
        this.stp.setOnChange( this.onChange )

    onChange( index )
        ui.showPopup( "Layout index " + index )

</sample>
