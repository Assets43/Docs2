<sample Sample navs array.>
navs = [
    ["Favorites", "favorites"],
    ["Groups", "person"],
    ["Folder", "folder"]
]
</sample>

<sample Basic>
from native import ui

def onStart(self):
    # Creates a layout with objects vertically centered
    self.main = ui.addLayout("main", "Linear", "VCenter", 1, 1)
    self.main.setChildMargins(0.01, 0.01, 0.01, 0.01)

    navs = [
        ["Favorites", "favorites"],
        ["Groups", "person"],
        ["Folder", "folder"]
    ]

    # Creates a BottomNavbar control
    self.bmn = ui.addBottomNavbar(self.main, navs, "", 1)

    # Add a callback handler for `onChange` event
    self.bmn.setOnChange(self.onChange)

def onChange(self, text, index):
    ui.showPopup(text)
</sample>

<sample Hide or show labels>
from native import ui

def onStart(self):
    # Creates a layout with objects vertically centered
    self.main = ui.addLayout("main", "Linear", "VCenter", 1, 1)
    self.main.setChildMargins(0.01, 0.01, 0.01, 0.01)

    navs = [
        ["Favorites", "favorites"],
        ["Groups", "person"],
        ["Folder", "folder"]
    ]

    # Creates a BottomNavbar control
    self.bmn = ui.addBottomNavbar(self.main, navs, "", 1)

    # Add a callback handler for `onChange` event
    self.bmn.setOnChange(self.onChange)

    # Button to show the labels
    self.btn = ui.addButton(self.main, "Show Labels")
    self.btn.setOnTouch(self.showLabels)

    # Button to hide the labels
    self.btn1 = ui.addButton(self.main, "Hide Labels")
    self.btn1.setOnTouch(self.hideLabels)

def showLabels(self):
    self.bmn.showLabels()

def hideLabels(self):
    self.bmn.hideLabels()

def onChange(self, text, index):
    ui.showPopup(text)
</sample>

<sample Custom styles>
from native import ui

def onStart(self):
    # Creates a layout with objects vertically centered
    self.main = ui.addLayout("main", "Linear", "VCenter", 1, 1)

    navs = [
        ["Favorites", "favorites"],
        ["Groups", "person"],
        ["Folder", "folder"]
    ]

    # Creates a BottomNavbar control
    self.bmn = ui.addBottomNavbar(self.main, navs, "", 1)

    # Hide the labels when not active
    self.bmn.labels = False

    # Set the color of the text and icons
    self.bmn.textColor = "#673ab7"
    self.bmn.iconColor = "#673ab7"

    # Set the icon size
    self.bmn.iconSize = "2rem"
</sample>