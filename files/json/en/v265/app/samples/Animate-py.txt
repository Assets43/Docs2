<sample Multiple Animation loops>
from native import app

def OnStart():
    lay = app.CreateLayout("Linear")

    txt1 = app.CreateText("0")
    lay.AddChild(txt1)

    txt2 = app.CreateText("0")
    lay.AddChild(txt2)

    app.AddLayout(lay)

    # delay between calls: 1000ms / 10fps = 100 ms
    # for higher precision use higher fps
    app.Animate(loop, 10)

t1 = 0
t2 = 0
n1 = 0
n2 = 0
def loop(t, dt):
    # set txt1 every 500 ms
    if t - t1 >= 500:
        txt1.SetText(str(++n1) + "\tdt: " + str(t - t1))
        t1 = t

    # set txt2 every 300 ms
    if t - t2 >= 300:
        txt2.SetText(str(++n2) + "\tdt: " + str(t - t2))
        t2 = t
</sample>

<sample Digital Clock>
from native import app

def OnStart():
    app.SetOrientation("Portrait")
    app.SetDebugEnabled(False)

    lay = app.CreateLayout("Linear", "FillXY,VCenter")

    txt = app.CreateText("", -1, -1, "multiline")
    txt.SetTextSize(30)
    lay.AddChild(txt)

    app.AddLayout(lay)

    <b>app.Animate( OnAnimate, 30 );</b>
    app.Animate(OnAnimate, 30)

def OnAnimate(time, dtime):
    txt.SetText(str(new Date().toLocaleString()) + "\n" + str(time))
</sample>

<sample SpeedTest>
cfg.No_Dom

ltime = Date.now()
c = 0

def OnStart():
    lay = app.CreateLayout("Linear", "FillXY,VCenter")

    txt = app.CreateText("", .5, .1, "left")
    lay.AddChild(txt)

    app.AddLayout(lay)

    <b>app.Animate(OnAnimate, 1000);</b>
    app.Animate(OnAnimate, 1000)

def OnAnimate(time, dtime):
    c += 1
    if time - ltime >= 1000:
        txt.SetText(str(c) + " cps")
        ltime = time
        c = 0
</sample>