<sample DrawImage>
def OnStart():
	lay = app.CreateLayout( "Linear", "FillXY" )

	<b>glview = app.CreateGLView( 1, 1, "Fast2d" )
	lay.AddChild( glview )

	img = glview.CreateImage( "/Sys/Img/Hello.png", DrawFrame )</b>

	app.AddLayout( lay )

def DrawFrame():
	glview.DrawImage( img, 0.25, 0.3, 0.5, -1, 45 )
	glview.Render()
</sample>

<sample Render Loop>
angle = 0

def OnStart():
	lay = app.CreateLayout( "Linear", "FillXY" )

	<b>glview = app.CreateGLView( 1, 1, "Fast2d" )
	lay.AddChild( glview )

	img = glview.CreateImage( "/Sys/Img/Hello.png", StartRendering )</b>

	app.AddLayout( lay )

def StartRendering():
	setInterval( DrawFrame, 1000/30 )

def DrawFrame():
	glview.DrawImage( img, 0.25, 0.3, 0.5, -1, angle )

	angle = angle + 10
	if  angle == 360 : angle = 0

	glview.Render()
</sample>

<sample Sprite Sheet Animation>
spriteCount = 8
srcWidth = 50
srcHeight = 60
frameCount = 0

def OnStart():
	lay = app.CreateLayout( "Linear", "FillXY" )

	<b>glview = app.CreateGLView( 1, 1, "Fast2d" )
	lay.AddChild( glview )

	img = glview.CreateImage( "/Sys/Img/Sprint.png", StartRendering )</b>

	app.AddLayout( lay )

def StartRendering():
	setInterval(DrawFrame, 1000/30)

def DrawFrame():
	spriteIndex = Math.floor(frameCount / 2) % spriteCount

	sx = spriteIndex * srcWidth
	sy = 0

	glview.DrawSprite( img, sx, sy, srcWidth, srcHeight,
				0.3, 0.4, 0.3, -1 )

	glview.Render()
	frameCount++
</sample>

<sample Sprite Touch>
objects = []

# Called when application is started.
def OnStart():
	# Create layout
	lay = app.CreateLayout( "linear" )

	# Create GLView
	glv = app.CreateGLView( 1, 1, "Fast2d" )
	glv.SetOnTouchUp( touch )

	# set first image
	img1 = glv.CreateImage( "/Sys/Img/Hello.png" )
	img1.name = "img1"
	img1.X = 0.1; img1.Y = 0.3
	img1.W = 0.7; img1.H = 0.4
	objects.push(img1)

	# set second image
	img2 = glv.CreateImage( "/Sys/Img/Droid1.png", startRender )
	img2.name = "img2"
	img2.X = 0.5; img2.Y = 0.5
	img2.W = 0.5; img2.H = 0.3
	objects.push(img2)

	lay.AddChild( glv )

	# Add layout to app.
	app.AddLayout( lay )

#  Draw images
def startRender():
	for i in objects: draw(objects[i])
	glv.Render()

#  Check which image was touched
def touch(ev):
	for i = objects.length; i-- > 0; :
		if  touched( objects[i], ev ) :
			app.ShowPopup( "touched " + objects[i].name )
			break



def draw(img, ev):
	glv.DrawImage( img, img.X, img.Y, img.W, img.H, 0)

def touched(img, ev):
	return img.X < ev.X && img.X + img.W > ev.X
		&& img.Y < ev.Y && img.Y + img.H > ev.Y
</sample>
