
<!DOCTYPE html>
<html>

<head>
	<title>addSlider</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" id="themeJQ" href="../css/themes/default/theme-dark.min.css"/>
	<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css"/>
	<link rel="stylesheet" id="themePrism" href="../css/themes/prism/dark.min.css"/>
	<link rel="stylesheet" id="themeDocs" href="../css/docs-dark.min.css"/>

	<script src="../js/forward.js"></script>
	<script src="../js/energize-min.js"></script>
	<script src="../js/jquery-1.8.1.min.js"></script>
	<script src="../../app.js"></script>
	<script src="../js/common.js"></script>
	<script src="../js/example.js"></script>
	<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>
<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' onclick="history.back(); return false">Back</a>
		<h1>addSlider</h1>
		<a class="ui-btn-right" data-icon="gear" data-iconpos="notext" onclick="tglTheme()"></a>
	</div>

	<div style="position:fixed; top:40px; width:100%; text-align:center; z-index:1101;">
		<div id="appPopup" class="androidPopup">Hello World</div>
	</div>

	<div data-role="content">

		<div class="samp samp-inline" style="font-size:revert; padding:10px 15px">
		<b>Content:</b><br>
		<span style="display:inline-block;padding-left:2em;">
				- <a href="" onclick="jumpTo('Properties')">Properties</a><br>
				- <a href="" onclick="jumpTo('Methods')">Methods</a><br>
			</span><br>
		</div>

		<p>Adds a Slider Component into your App.</p>

		<div class="samp">
		sld = ui.addSlider(
			<a href="#pop_obj_001" data-transition="pop" data-rel="popup">parent</a>,
			<a href="#pop_num_001" data-transition="pop" data-rel="popup">value</a>,
			<a href="#pop_str_001" data-transition="pop" data-rel="popup">options</a>,
			<a href="#pop_num_002" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_003" data-transition="pop" data-rel="popup">height</a> )
			→ <b>Object:</b> Slider Component.
		</div>

		<p>A Slider Component defines a control for selecting a number whose exact value must be within the range.<br>
		<br>
		Default range is 0 to 100. However, you can set restrictions on what numbers are accepted with the min, max, steps and even marks.<br>
		<br>
		<style>.samp { margin-top: 2px; } </style></p>
		<h3>Properties</h3>
		<p>These are the setter and getter properties for the addSlider Component.<br>
		<div class="samp"><a href="#absheight-0" data-transition="pop" data-rel="popup" class="ui-link">absHeight </a></div><div class="samp"><a href="#absleft-5" data-transition="pop" data-rel="popup" class="ui-link">absLeft </a></div><div class="samp"><a href="#abstop-10" data-transition="pop" data-rel="popup" class="ui-link">absTop </a></div><div class="samp"><a href="#abswidth-15" data-transition="pop" data-rel="popup" class="ui-link">absWidth </a></div><div class="samp"><a href="#backcolor-20" data-transition="pop" data-rel="popup" class="ui-link">backColor </a></div><div class="samp"><a href="#backimage-25" data-transition="pop" data-rel="popup" class="ui-link">backImage </a></div><div class="samp"><a href="#border-30" data-transition="pop" data-rel="popup" class="ui-link">border </a></div><div class="samp"><a href="#bordercolor-35" data-transition="pop" data-rel="popup" class="ui-link">borderColor </a></div><div class="samp"><a href="#borderstyle-40" data-transition="pop" data-rel="popup" class="ui-link">borderStyle </a></div><div class="samp"><a href="#color-45" data-transition="pop" data-rel="popup" class="ui-link">color </a></div><div class="samp"><a href="#cornerradius-50" data-transition="pop" data-rel="popup" class="ui-link">cornerRadius </a></div><div class="samp"><a href="#disabled-55" data-transition="pop" data-rel="popup" class="ui-link">disabled </a></div><div class="samp"><a href="#fontfile-60" data-transition="pop" data-rel="popup" class="ui-link">fontFile </a></div><div class="samp"><a href="#height-65" data-transition="pop" data-rel="popup" class="ui-link">height </a></div><div class="samp"><a href="#isvisible-70" data-transition="pop" data-rel="popup" class="ui-link">isVisible </a></div><div class="samp"><a href="#left-75" data-transition="pop" data-rel="popup" class="ui-link">left </a></div><div class="samp"><a href="#margins-80" data-transition="pop" data-rel="popup" class="ui-link">margins </a></div><div class="samp"><a href="#marks-85" data-transition="pop" data-rel="popup" class="ui-link">marks </a></div><div class="samp"><a href="#maxvalue-90" data-transition="pop" data-rel="popup" class="ui-link">maxValue </a></div><div class="samp"><a href="#minvalue-95" data-transition="pop" data-rel="popup" class="ui-link">minValue </a></div><div class="samp"><a href="#opacity-100" data-transition="pop" data-rel="popup" class="ui-link">opacity </a></div><div class="samp"><a href="#options-105" data-transition="pop" data-rel="popup" class="ui-link">options </a></div><div class="samp"><a href="#orientation-110" data-transition="pop" data-rel="popup" class="ui-link">orientation </a></div><div class="samp"><a href="#padding-115" data-transition="pop" data-rel="popup" class="ui-link">padding </a></div><div class="samp"><a href="#parent-120" data-transition="pop" data-rel="popup" class="ui-link">parent </a></div><div class="samp"><a href="#position-125" data-transition="pop" data-rel="popup" class="ui-link">position </a></div><div class="samp"><a href="#rotation-130" data-transition="pop" data-rel="popup" class="ui-link">rotation </a></div><div class="samp"><a href="#step-135" data-transition="pop" data-rel="popup" class="ui-link">step </a></div><div class="samp"><a href="#textcolor-140" data-transition="pop" data-rel="popup" class="ui-link">textColor </a></div><div class="samp"><a href="#textsize-145" data-transition="pop" data-rel="popup" class="ui-link">textSize </a></div><div class="samp"><a href="#top-150" data-transition="pop" data-rel="popup" class="ui-link">top </a></div><div class="samp"><a href="#track-155" data-transition="pop" data-rel="popup" class="ui-link">track </a></div><div class="samp"><a href="#type-160" data-transition="pop" data-rel="popup" class="ui-link">type </a></div><div class="samp"><a href="#value-165" data-transition="pop" data-rel="popup" class="ui-link">value </a></div><div class="samp"><a href="#valuelabeldisplay-170" data-transition="pop" data-rel="popup" class="ui-link">valueLabelDisplay </a></div><div class="samp"><a href="#visibility-175" data-transition="pop" data-rel="popup" class="ui-link">visibility </a></div><div class="samp"><a href="#width-180" data-transition="pop" data-rel="popup" class="ui-link">width </a></div><br>
		<div data-role="popup" id="absheight-0" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the absolute height of the control in pixels.</p></div><div data-role="popup" id="absleft-5" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the absolute distance of the control from the left in pixels.</p></div><div data-role="popup" id="abstop-10" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the absolute distance of the control from the top in pixels.</p></div><div data-role="popup" id="abswidth-15" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the absolute width of the control in pixels.</p></div><div data-role="popup" id="backcolor-20" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		A hexadecimal color of the form <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">#rrggbb</span></p></div><div data-role="popup" id="backimage-25" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		The path to your image file.</p></div><div data-role="popup" id="border-30" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the border thickness in pixels.</p></div><div data-role="popup" id="bordercolor-35" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the border color. Color is in hexadecimal form <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">#rrggbb</span></p></div><div data-role="popup" id="borderstyle-40" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the border style. Values can be <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">dotted</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">dashed</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">solid</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">double</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">groove</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">ridge</span>&#44; <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">inset</span> and <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">outset</span>. Default is <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">solid</span>.</p></div><div data-role="popup" id="color-45" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the theme color of the Slider. Values can be <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Primary</span> or <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Secondary</span></p></div><div data-role="popup" id="cornerradius-50" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the corner radius in pixels.</p></div><div data-role="popup" id="disabled-55" class="ui-content"><p><span style="color:#4c4;">Boolean</span><br>
		Sets or returns the <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">disabled</span> state of the control.</p></div><div data-role="popup" id="fontfile-60" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">relative</span> path to the font-family use.</p></div><div data-role="popup" id="height-65" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the height of the control as a fraction of the parent control.</p></div><div data-role="popup" id="isvisible-70" class="ui-content"><p><span style="color:#4c4;">Boolean</span><br>
		Returns whether the control is visible or not.</p></div><div data-role="popup" id="left-75" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the distance of the control from the left.</p></div><div data-role="popup" id="margins-80" class="ui-content"><p><span style="color:#4c4;">Array</span><br>
		Sets or returns the margin of the control. Works on controls with <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Linear</span> parent only. You can also pass a number to set equal margins for all sides.</p></div><div data-role="popup" id="marks-85" class="ui-content"><p><span style="color:#4c4;">Boolean</span><br>
		Sets or returns the marks on the Slider Component. The marks will be base on the <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">step</span> property. To add a custom labels in each mark&#44; pass an array with an object element with properties <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">label<String></span> and <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">value<Number></span>. See marks array example below.</p></div><div data-role="popup" id="maxvalue-90" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the maximum value.</p></div><div data-role="popup" id="minvalue-95" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the minimum value.</p></div><div data-role="popup" id="opacity-100" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the opacity of the control.</p></div><div data-role="popup" id="options-105" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">options</span> of the control.</p></div><div data-role="popup" id="orientation-110" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the orientation of the Slider Component. Values can be <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Vertical</span> or <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Horizontal</span></p></div><div data-role="popup" id="padding-115" class="ui-content"><p><span style="color:#4c4;">Array</span><br>
		Sets or returns the padding of the control. You can also pass a number to set equal padding for all sides.</p></div><div data-role="popup" id="parent-120" class="ui-content"><p><span style="color:#4c4;">Object</span><br>
		Returns the parent layout control.</p></div><div data-role="popup" id="position-125" class="ui-content"><p><span style="color:#4c4;">Object</span><br>
		Returns the position of the control. The returned object has <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">left</span> <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">top</span> <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">right</span> and <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">bottom</span> props.</p></div><div data-role="popup" id="rotation-130" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the angle of rotation in degrees.</p></div><div data-role="popup" id="step-135" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the Sider Component steps.</p></div><div data-role="popup" id="textcolor-140" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the color of the text.</p></div><div data-role="popup" id="textsize-145" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the size of the text within the control.</p></div><div data-role="popup" id="top-150" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Returns the distance of the control from the top.</p></div><div data-role="popup" id="track-155" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the track properties of the Slider Component. Values can be <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Normal</span> <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">False</span> or <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">Inverted</span></p></div><div data-role="popup" id="type-160" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Returns the type of the control.</p></div><div data-role="popup" id="value-165" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the value of the Slider Component.</p></div><div data-role="popup" id="valuelabeldisplay-170" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the value label display type. Values can be <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">on</span> <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">auto</span> <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">off</span>. If <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">on</span>&#44; value label will always be shown. If <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">auto</span>&#44; value label will be shown when sliding is active. If <span style="color:#fb8c00; font-family:Courier&#44; monospace; font-size:100%; padding:0px 2px;">false</span>&#44; value label display will not be shown.</p></div><div data-role="popup" id="visibility-175" class="ui-content"><p><span style="color:#4c4;">String</span><br>
		Sets or returns the visibility of the control.</p></div><div data-role="popup" id="width-180" class="ui-content"><p><span style="color:#4c4;">Number</span><br>
		Sets or returns the width of the control as a fraction of the parent control.</p></div></p>
		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Marks array</h3>
			<div id="examp1" style="font-size:70%">
				<span class="token keyword">var</span> marks <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				        <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"First stop"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br>
				        <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"Second stop"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br>
				        <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"Third stop"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">70</span> <span class="token punctuation">}</span><br>
				    <span class="token punctuation">]</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp1 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp1 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Basic slider</h3>
			<div id="examp2" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a slider control to the main layout with an initial value of 10</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addSlider</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the value of the slider changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span><span class="token function">setOnChange</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Create a popup where to display values</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onChange</span><span class="token punctuation">(</span> <span class="token parameter">value</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup<span class="token punctuation">.</span>text <span class="token operator">=</span> value<br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp2 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp2 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Slider steps and marks</h3>
			<div id="examp3" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a slider control to the main layout with an initial value of 10</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addSlider</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Set the step to 10</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span>step <span class="token operator">=</span> <span class="token number">10</span><br>
				        <br>
				        <span class="token comment">// Add marks for every step</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span>marks <span class="token operator">=</span> <span class="token boolean">true</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the value of the slider changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span><span class="token function">setOnSelect</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelect <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a text control to show the selected value</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>txt <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token string">"Value is 10"</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onSelect</span><span class="token punctuation">(</span> <span class="token parameter">value</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>txt<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">"Value is "</span> <span class="token operator">+</span> value<br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp3 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp3 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Slider with custom step marks</h3>
			<div id="examp4" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered.</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a slider control to the main layout with an initial value of 10</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addSlider</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Primary"</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Set the step to 10</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span>step <span class="token operator">=</span> <span class="token number">10</span><br>
				        <br>
				        <span class="token comment">// Add custom marks for values at 10, 40 and 60</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span>marks <span class="token operator">=</span> <span class="token punctuation">[</span><br>
				            <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"First"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br>
				            <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"Second"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br>
				            <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">"Third"</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">60</span> <span class="token punctuation">}</span><br>
				        <span class="token punctuation">]</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the value of the slider changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span><span class="token function">setOnSelect</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onSelect <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a text control to show the selected value</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>txt <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token string">"Value is 10"</span><span class="token punctuation">)</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>txt<span class="token punctuation">.</span>margins <span class="token operator">=</span> <span class="token number">0.02</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onSelect</span><span class="token punctuation">(</span> <span class="token parameter">value</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>txt<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">"Value is "</span> <span class="token operator">+</span> value<br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp4 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp4 )">      Run      </a>
			</div>
		</div>


		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="a">
			<h3>Example - Vertical slider</h3>
			<div id="examp5" style="font-size:70%">
				<span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">App</span><br>
				<span class="token punctuation">{</span><br>
				    <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token comment">// Creates a fullscreen layout with objects vertically centered</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>main <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">,</span> <span class="token string">"Linear"</span><span class="token punctuation">,</span> <span class="token string">"VCenter,FillXY"</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a vertical slider control to the main layout</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">addSlider</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"Vertical,Primary"</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Add a callback handler when the value of the slider changes</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>sld<span class="token punctuation">.</span><span class="token function">setOnChange</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange <span class="token punctuation">)</span><br>
				        <br>
				        <span class="token comment">// Create a popup where to display values</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup <span class="token operator">=</span> ui<span class="token punctuation">.</span><span class="token function">showPopup</span><span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				    <br>
				    <span class="token function">onChange</span><span class="token punctuation">(</span> <span class="token parameter">value</span> <span class="token punctuation">)</span><br>
				    <span class="token punctuation">{</span><br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup<span class="token punctuation">.</span>text <span class="token operator">=</span> value<br>
				        <span class="token keyword">this</span><span class="token punctuation">.</span>popup<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br>
				    <span class="token punctuation">}</span><br>
				<span class="token punctuation">}</span>
			</div>
			<div name="divCopy" align="right">
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy( examp5 )">Copy All</a>
			<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo( examp5 )">      Run      </a>
			</div>
		</div>


		<h3>Methods</h3>
		<p>The following methods are available on the <strong>Slider</strong> object:</p>

		<div class="samp">
			<a href="#pop_dsc_001" data-transition="pop" data-rel="popup">animate</a>(
			<a href="#pop_str_002" data-transition="pop" data-rel="popup">anim</a>,
			<a href="#pop_num_004" data-transition="pop" data-rel="popup">duration</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_002" data-transition="pop" data-rel="popup">bringForward</a>(
			<a href="#pop_num_005" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_003" data-transition="pop" data-rel="popup">destroy</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_004" data-transition="pop" data-rel="popup">getMarks</a>() → <b>Boolean</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_005" data-transition="pop" data-rel="popup">getPosition</a>(
			<a href="#pop_str_003" data-transition="pop" data-rel="popup">options</a> )
			→ <b>Object</b>
		</div>
		<div class="samp">
			<a href="#pop_dsc_006" data-transition="pop" data-rel="popup">gone</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_007" data-transition="pop" data-rel="popup">hide</a>()
		</div>
		<div class="samp">
			<a href="#pop_dsc_008" data-transition="pop" data-rel="popup">sendBackward</a>(
			<a href="#pop_num_006" data-transition="pop" data-rel="popup">zIndex</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_009" data-transition="pop" data-rel="popup">setBorder</a>(
			<a href="#pop_num_007" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_str_004" data-transition="pop" data-rel="popup">clr</a>,
			<a href="#pop_str_005" data-transition="pop" data-rel="popup">style</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00a" data-transition="pop" data-rel="popup">setCornerRadius</a>(
			<a href="#pop_num_008" data-transition="pop" data-rel="popup">tl</a>,
			<a href="#pop_num_009" data-transition="pop" data-rel="popup">tr</a>,
			<a href="#pop_num_00a" data-transition="pop" data-rel="popup">bl</a>,
			<a href="#pop_num_00b" data-transition="pop" data-rel="popup">br</a>,
			<a href="#pop_str_006" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00b" data-transition="pop" data-rel="popup">setMargins</a>(
			<a href="#pop_num_00c" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_00d" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_00c" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_00d" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_007" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00c" data-transition="pop" data-rel="popup">setMarks</a>(
			<a href="#pop_obj_002" data-transition="pop" data-rel="popup">val</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00d" data-transition="pop" data-rel="popup">setOnChange</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00e" data-transition="pop" data-rel="popup">setOnContextMenu</a>(
			<a href="#pop_fnc_002" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_00f" data-transition="pop" data-rel="popup">setOnSelect</a>(
			<a href="#pop_fnc_001" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_010" data-transition="pop" data-rel="popup">setOnTouch</a>(
			<a href="#pop_fnc_003" data-transition="pop" data-rel="popup">callback</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_011" data-transition="pop" data-rel="popup">setPadding</a>(
			<a href="#pop_num_010" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_011" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_num_012" data-transition="pop" data-rel="popup">right</a>,
			<a href="#pop_num_011" data-transition="pop" data-rel="popup">bottom</a>,
			<a href="#pop_str_008" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_012" data-transition="pop" data-rel="popup">setPosition</a>(
			<a href="#pop_num_014" data-transition="pop" data-rel="popup">left</a>,
			<a href="#pop_num_015" data-transition="pop" data-rel="popup">top</a>,
			<a href="#pop_str_009" data-transition="pop" data-rel="popup">mode</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_013" data-transition="pop" data-rel="popup">setRange</a>(
			<a href="#pop_num_016" data-transition="pop" data-rel="popup">min</a>,
			<a href="#pop_num_017" data-transition="pop" data-rel="popup">max</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_014" data-transition="pop" data-rel="popup">setScale</a>(
			<a href="#pop_num_018" data-transition="pop" data-rel="popup">x</a>,
			<a href="#pop_num_019" data-transition="pop" data-rel="popup">y</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_015" data-transition="pop" data-rel="popup">setSize</a>(
			<a href="#pop_num_014" data-transition="pop" data-rel="popup">width</a>,
			<a href="#pop_num_01b" data-transition="pop" data-rel="popup">height</a> )
		</div>
		<div class="samp">
			<a href="#pop_dsc_016" data-transition="pop" data-rel="popup">show</a>()
		</div>

	</div>

	<div data-role="popup" id="pop_num_001" class="ui-content"><b>Number:</b> The initial value of the Slider. Value must be between 0-100,  the default min and max values.</div>
	<div data-role="popup" id="pop_num_002" class="ui-content"><b>Number:</b> Fraction of the screen width. [0-1]</div>
	<div data-role="popup" id="pop_num_003" class="ui-content"><b>Number:</b> Fraction of the screen height.</div>
	<div data-role="popup" id="pop_num_004" class="ui-content"><b>Number:</b> The time in milliseconds.</div>
	<div data-role="popup" id="pop_num_005" class="ui-content"><b>Number:</b> The z-index. A negative value behaves like `sendBackward` method.</div>
	<div data-role="popup" id="pop_num_006" class="ui-content"><b>Number:</b> The z-index. A positve value behaves like `bringForward` method.</div>
	<div data-role="popup" id="pop_num_007" class="ui-content"><b>Number:</b> Border-left thickness in pixels.</div>
	<div data-role="popup" id="pop_num_008" class="ui-content"><b>Number:</b> Top-Left border radius in pixels.</div>
	<div data-role="popup" id="pop_num_009" class="ui-content"><b>Number:</b> Top-Right border radius in pixels.</div>
	<div data-role="popup" id="pop_num_00a" class="ui-content"><b>Number:</b> Bottom-Left border radius in pixels.</div>
	<div data-role="popup" id="pop_num_00b" class="ui-content"><b>Number:</b> Bottom-Right border radius in pixels.</div>
	<div data-role="popup" id="pop_num_00c" class="ui-content"><b>Number:</b> Fraction of the parent width.</div>
	<div data-role="popup" id="pop_num_00d" class="ui-content"><b>Number:</b> Fraction of the parent height.</div>
	<div data-role="popup" id="pop_num_010" class="ui-content"><b>Number:</b> Fraction of the component width.</div>
	<div data-role="popup" id="pop_num_011" class="ui-content"><b>Number:</b> Fraction of the component height. [0-1]</div>
	<div data-role="popup" id="pop_num_012" class="ui-content"><b>Number:</b> Fraction of the component width. [0-1]</div>
	<div data-role="popup" id="pop_num_014" class="ui-content"><b>Number:</b> Fraction of the parent width. [0-1]</div>
	<div data-role="popup" id="pop_num_015" class="ui-content"><b>Number:</b> Fraction of the screen height. [0-1]</div>
	<div data-role="popup" id="pop_num_016" class="ui-content"><b>Number:</b> Minimum value of the slider.</div>
	<div data-role="popup" id="pop_num_017" class="ui-content"><b>Number:</b> Maximum value of the slider.</div>
	<div data-role="popup" id="pop_num_018" class="ui-content"><b>Number:</b> The x-scale of the component.Values less than `0` is smaller than the normal. While values greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_019" class="ui-content"><b>Number:</b> The y-scale of the component. Values less than `1` is smaller than the normal. While vaues greater than `1` is greater than the normal.</div>
	<div data-role="popup" id="pop_num_01b" class="ui-content"><b>Number:</b> Fraction of the parent height. [0-1]</div>
	<div data-role="popup" id="pop_str_001" class="ui-content"><b>String:</b> <docstr>“A comma separated options for the Slider Component. Options can be n Color: `Primary` `Secondary` n Orienation: `Horizontal` `Vertical` n Track: `Normal` `Inverted` `False`”</docstr></div>
	<div data-role="popup" id="pop_str_002" class="ui-content"><b>String:</b> <docstr>“The type of animation. Here are the available values `bounce` `flash` `pulse` `rubberBand` `shakeX` `shakeY` `headShake` `swing` `tada` `wobble` `jello` `heartBeat` n Back Entrances `backInDown` `backInLeft` `backInRight` `backInUp` n Back Exits `backOutDown` `backOutLeft` `backOutRight` `backOutUp` n Bouncing Entrances `bounceIn` `bounceInDown` `bounceInLeft` `bounceInRight` `bounceInUp` n Bouncing exits `bounceOut` `bounceOutDown` `bounceOutLeft` `bounceOutRight` `bounceOutUp` n Fading entrances `fadeIn` `fadeInDown` `fadeInDownBig` `fadeInLeft` `fadeInLeftBig` `fadeInRight` `fadeInRightBig` `fadeInUp` `fadeInUpBig` `fadeInTopLeft` `fadeInTopRight` `fadeInBottomLeft` `fadeInBottomRight` n Fading exits `fadeOut` `fadeOutDown` `fadeOutDownBig` `fadeOutLeft` `fadeOutLeftBig` `fadeOutRight` `fadeOutRightBig` `fadeOutUp` `fadeOutUpBig` `fadeOutTopLeft` `fadeOutTopRight` `fadeOutBottomRight` `fadeOutBottomLeft` n Flippers `flip` `flipInX` `flipInY` `flipOutX` `flipOutY` n Lightspeed `lightSpeedInRight` `lightSpeedInLeft` `lightSpeedOutRight` `lightSpeedOutLeft` n Rotating Entrances `rotateIn` `rotateInDownLeft` `rotateInDownRight` `rotateInUpLeft` `rotateInUpRight` n Rotating Exits `rotateOut` `rotateOutDownLeft` `rotateOutDownRight` `rotateOutUpLeft` `rotateOutUpRight` n Specials `hinge` `jackInTheBox` `rollIn` `rollOut` n Zooming Entrances `zoomIn` `zoomInDown` `zoomInLeft` `zoomInRight` `zoomInUp` n Zooming Exits `zoomOut` `zoomOutDown` `zoomOutLeft` `zoomOutRight` `zoomOutUp` n Sliding Entrances `slideInDown` `slideInLeft` `slideInRight` `slideInUp` n Sliding Exits `slideOutDown` `slideOutLeft` `slideOutRight` `slideOutUp`.”</docstr></div>
	<div data-role="popup" id="pop_str_003" class="ui-content"><b>String:</b> <docstr>“The mode of the measurements. Values can be `px` or `%`”</docstr></div>
	<div data-role="popup" id="pop_str_004" class="ui-content"><b>String:</b> <docstr>“Border color in hexadecimal form `#rrggbb`”</docstr></div>
	<div data-role="popup" id="pop_str_005" class="ui-content"><b>String:</b> <docstr>“Border-styles. Values can be `dotted` `dashed` `solid` `double` `groove` `ridge` `inset` and `outset`. Default is `solid`”</docstr></div>
	<div data-role="popup" id="pop_str_006" class="ui-content"><b>String:</b> <docstr>“Unit. Values are `px` `rem` or `%`.”</docstr></div>
	<div data-role="popup" id="pop_str_007" class="ui-content"><b>String:</b> <docstr>“`px` or `%`”</docstr></div>
	<div data-role="popup" id="pop_str_008" class="ui-content"><b>String:</b> <docstr>“The size thickness mode. Can be `px`”</docstr></div>
	<div data-role="popup" id="pop_str_009" class="ui-content"><b>String:</b> <docstr>“Unit of measurement. Can be `px` or `%` or any css unit of measurement.”</docstr></div>
	<div data-role="popup" id="pop_obj_001" class="ui-content"><b>Object:</b> The layout where to add the Slider Component.</div>
	<div data-role="popup" id="pop_obj_002" class="ui-content"><b>Object:</b> The marks on the Slider Component.</div>
	<div data-role="popup" id="pop_obj_003" class="ui-content"><b>Object:</b> The pointer event object.</div>
	<div data-role="popup" id="pop_obj_004" class="ui-content"><b>Object:</b> The click event object.</div>
	<div data-role="popup" id="pop_fnc_001" class="ui-content"><b>function</b>(
		<a href="" onclick="app.ShowPopup('Number: The value of the Slider component.')">value </a>
	)</div>
	<div data-role="popup" id="pop_fnc_002" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_obj_003')" data-transition="pop" data-rel="popup">event </a>
	)</div>
	<div data-role="popup" id="pop_fnc_003" class="ui-content"><b>function</b>(
		<a href="" onclick="switchPopup(this, '#pop_obj_004')" data-transition="pop" data-rel="popup">event </a>
	)</div>
	<div data-role="popup" id="pop_dsc_001" class="ui-content"><b>sld.animate</b><br>Animate the component</div>
	<div data-role="popup" id="pop_dsc_002" class="ui-content"><b>sld.bringForward</b><br>Bring this component forward by a given z-index</div>
	<div data-role="popup" id="pop_dsc_003" class="ui-content"><b>sld.destroy</b><br>Destroy the component</div>
	<div data-role="popup" id="pop_dsc_004" class="ui-content"><b>sld.getMarks</b><br>Returns the step marks of the Slider Component. See <kbd>setMarks</kbd> methods for possible values</div>
	<div data-role="popup" id="pop_dsc_005" class="ui-content"><b>sld.getPosition</b><br>Returns the position of the component. The return object is of the form `{ left, top, right, bottom</div>
	<div data-role="popup" id="pop_dsc_006" class="ui-content"><b>sld.gone</b><br>Destroy the component</div>
	<div data-role="popup" id="pop_dsc_007" class="ui-content"><b>sld.hide</b><br>Hide the component</div>
	<div data-role="popup" id="pop_dsc_008" class="ui-content"><b>sld.sendBackward</b><br>Bring this component backward by a given z-index</div>
	<div data-role="popup" id="pop_dsc_009" class="ui-content"><b>sld.setBorder</b><br>Sets the border line for the component container</div>
	<div data-role="popup" id="pop_dsc_00a" class="ui-content"><b>sld.setCornerRadius</b><br>Sets the corner radius of the component</div>
	<div data-role="popup" id="pop_dsc_00b" class="ui-content"><b>sld.setMargins</b><br>Sets the margin of the component</div>
	<div data-role="popup" id="pop_dsc_00c" class="ui-content"><b>sld.setMarks</b><br>Sets the marks of the Slider Component<br>If value is <kbd>Boolean</kbd> the marks is base on the step<br>If the value is <kbd>Array</kbd>, the elements must be an object of the form <kbd>{ label, value }</kbd> where <kbd>label</kbd> is a string and <kbd>value</kbd> is a number within the range</div>
	<div data-role="popup" id="pop_dsc_00d" class="ui-content"><b>sld.setOnChange</b><br>Sets a callback function when the value of the Slider Component changes</div>
	<div data-role="popup" id="pop_dsc_00e" class="ui-content"><b>sld.setOnContextMenu</b><br>Adds a callback function on right click</div>
	<div data-role="popup" id="pop_dsc_00f" class="ui-content"><b>sld.setOnSelect</b><br>Sets a callback function when a final value is selected. This is equal to submit value event</div>
	<div data-role="popup" id="pop_dsc_010" class="ui-content"><b>sld.setOnTouch</b><br>Adds a callback handler when the component is touch</div>
	<div data-role="popup" id="pop_dsc_011" class="ui-content"><b>sld.setPadding</b><br>Sets the padding component container</div>
	<div data-role="popup" id="pop_dsc_012" class="ui-content"><b>sld.setPosition</b><br>Sets the position of the component relative to its parent dimensions</div>
	<div data-role="popup" id="pop_dsc_013" class="ui-content"><b>sld.setRange</b><br>Sets a range value for the Slider Component</div>
	<div data-role="popup" id="pop_dsc_014" class="ui-content"><b>sld.setScale</b><br>Sets the x and y scaling of the component</div>
	<div data-role="popup" id="pop_dsc_015" class="ui-content"><b>sld.setSize</b><br>Sets the size of the component</div>
	<div data-role="popup" id="pop_dsc_016" class="ui-content"><b>sld.show</b><br>Show the component</div>
</div>
</body>

</html>
